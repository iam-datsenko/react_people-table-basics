{"version":3,"sources":["components/HomePage/HomePage.tsx","components/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","components/NotFoundPage/NotFoundPage.tsx","api/people.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["HomePage","className","PageNavLink","to","tab","isActive","classNames","Navbar","role","NotFoundPage","wait","delay","Promise","resolve","setTimeout","getPeople","fetch","response","Error","json","Loader","PersonLink","person","slug","sex","name","PeopleTable","people","personSlug","useParams","findParent","personName","parent","find","map","born","died","motherName","fatherName","defaultError","status","message","PeoplePage","useState","setPeople","error","setError","isLoading","setIsLoading","getPeopleFromServer","peopleFromServer","useEffect","length","App","path","index","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.97d3d7a1.chunk.js","sourcesContent":["import React from 'react';\n\nexport const HomePage: React.FC = () => (\n  <h1 className=\"title\">Home Page</h1>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  tab: string,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, tab }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classNames('navbar-item', {\n      'has-background-grey-lighter': isActive,\n    })}\n  >\n    {tab}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" tab=\"Home\" />\n\n        <PageNavLink to=\"/people\" tab=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = () => (\n  <h1 className=\"title\">Page not found</h1>\n);\n","import { Person } from '../types';\n\n/* eslint-disable max-len */\nconst BASE_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nconst wait = (delay: number) => {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n};\n\nexport const getPeople = async (): Promise<Person[]> => {\n  await wait(1500);\n  let response;\n\n  try {\n    response = await fetch(BASE_URL);\n  } catch (error) {\n    throw new Error('Can\\'t get people from server');\n  }\n\n  return response.json();\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <NavLink\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </NavLink>\n);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ninterface Props {\n  people: Person[],\n}\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const { personSlug } = useParams();\n\n  const findParent = (personName: string | null) => {\n    const parent = people.find(({ name }) => name === personName);\n\n    if (parent) {\n      return (\n        <PersonLink person={parent} />\n      );\n    }\n\n    return personName || '-';\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => {\n          const {\n            sex,\n            born,\n            died,\n            motherName,\n            fatherName,\n            slug,\n          } = person;\n\n          return (\n            <tr\n              data-cy=\"person\"\n              className={classNames({\n                'has-background-warning': slug === personSlug,\n              })}\n            >\n              <td>\n                <PersonLink person={person} />\n              </td>\n\n              <td>{sex}</td>\n              <td>{born}</td>\n              <td>{died}</td>\n              <td>{findParent(motherName)}</td>\n              <td>{findParent(fatherName)}</td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api/people';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PeopleTable } from '../PeopleTable';\n\ninterface Error {\n  status: boolean,\n  message: string,\n}\n\nconst defaultError = {\n  status: false,\n  message: '',\n};\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [error, setError] = useState<Error>(defaultError);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getPeopleFromServer = async () => {\n    try {\n      const peopleFromServer = await getPeople();\n\n      setPeople(peopleFromServer);\n      setError(defaultError);\n    } catch (e: any) {\n      setError({\n        status: true,\n        message: e.message,\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  if (error.status) {\n    return (\n      <h1\n        data-cy=\"peopleLoadingError\"\n        className=\"title has-text-danger\"\n      >\n        {`Error: ${error.message}`}\n      </h1>\n    );\n  }\n\n  return (\n    <div className=\"box table-container\">\n      {isLoading && <Loader />}\n\n      {(!isLoading && !error.status) && (\n        <>\n          {people.length !== 0\n            ? (\n              <>\n                <h1 className=\"title\">People Page</h1>\n\n                <PeopleTable people={people} />\n              </>\n            ) : (\n              <h1\n                data-cy=\"noPeopleMessage\"\n                className=\"title has-text-danger\"\n              >\n                {`Error: ${error.message}`}\n              </h1>\n            )}\n        </>\n      )}\n    </div>\n  );\n};\n","import { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { HomePage } from './components/HomePage';\nimport { Navbar } from './components/Navbar';\nimport { NotFoundPage } from './components/NotFoundPage';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <div className=\"block\">\n          <Routes>\n            <Route path=\"/people\">\n              <Route index element={<PeoplePage />} />\n              <Route path=\":personSlug\" element={<PeoplePage />} />\n            </Route>\n\n            <Route path=\"/\" element={<HomePage />} />\n            <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n            <Route path=\"*\" element={<NotFoundPage />} />\n          </Routes>\n        </div>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}